<!--
 API Documentation HTML Template  - 1.0.1
 Copyright Â© 2016 Florian Nicolas
 Licensed under the MIT license.
 https://github.com/ticlekiwi/API-Documentation-HTML-Template
 !-->
<!DOCTYPE html>
<html class="no-js" lang="en">
<head>
    <meta charset="utf-8">
    <title>API - Documentation</title>
    <meta name="description" content="">
    <meta name="author" content="ticlekiwi">

    <meta http-equiv="cleartype" content="on">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="../public/vanillaCSS/hightlightjs-dark.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.8.0/highlight.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,500;1,300&family=Source+Code+Pro:wght@300&display=swap" rel="stylesheet"> 
    <link rel="stylesheet" href="../public/vanillaCSS/style.css" media="all">
    <script>hljs.initHighlightingOnLoad();</script>
</head>

<body>
<div class="left-menu">
    <div class="content-logo">
        <div class="logo">
            <img alt="platform by Emily van den Heever from the Noun Project" title="platform by Emily van den Heever from the Noun Project" src="../public/images/logo.png" height="32" />
            <span>API Documentation</span>
        </div>
        <button class="burger-menu-icon" id="button-menu-mobile">
            <svg width="34" height="34" viewBox="0 0 100 100"><path class="line line1" d="M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058"></path><path class="line line2" d="M 20,50 H 80"></path><path class="line line3" d="M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942"></path></svg>
        </button>
    </div>
    <div class="mobile-menu-closer"></div>
    <div class="content-menu">
        <div class="content-infos">
            <div class="info"><b>Version:</b> 1.0</div>
            <div class="info"><b>Last Updated:</b> 01th Apr, 2022</div>
        </div>
        <ul>
            <li class="scroll-to-link active" data-target="content-get-started">
                <a>GET STARTED</a>
            </li>
            <li class="scroll-to-link" data-target="content-get-countries">
                <a>Get Countries</a>
            </li>
            <li class="scroll-to-link" data-target="content-get-states">
                <a>Get States</a>
            </li>
            <li class="scroll-to-link" data-target="content-get-cities">
                <a>Get cities</a>
            </li>
        </ul>
    </div>
</div>
<div class="content-page">
    <div class="content-code"></div>
    <div class="content">
        <div class="overflow-hidden content-section" id="content-get-started">
            <h1>Get started</h1>
            <pre>
    API Endpoint

        https://dynamic-searchable-generic-api.herokuapp.com/
                </pre>
            <p>
                The API provides query-like access to some generic data.
            </p>
        </div>
        <div class="overflow-hidden content-section" id="content-get-countries">
            <h2>Get countries</h2>
            <pre>
                <code class="bash">
# Here is a simple node.js fetch get example (no need to add headers)
fetch("http://localhost:3000/paises", {
    "method": "GET"
});
                </code>
            </pre>
            <p>
                To get Countries you need to make a GET call to the following url:<br>
                <code class="higlighted break-word">https://dynamic-searchable-generic-api.herokuapp.com/paises/:id?</code><br><br>
                Note: the :id field is optional, and with or without it you can still use URL queries to the server, for example, in the next URL we will get all results that match the id 4 with name "randomName" and stateId "6":
                <code class="higlighted break-word">https://dynamic-searchable-generic-api.herokuapp.com/paises/4?name=randomName&stateId=6</code>
            </p>
            <br>
            <pre><code class="json">
Result example :

[
    {
        "id": 1,
        "name": "brazil",
        "description": "brazil description",
        "population": 212559417,
        "gdp": 1444733260000
    },
    {
        "id": 2,
        "name": "united states",
        "description": "united states description",
        "population": 334403317,
        "gdp": 20953030000000
    }
]
                </code></pre>
            <h4>QUERY PARAMETERS</h4>
            <table class="central-overflow-x">
                <thead>
                    <tr>
                        <th>Field</th>
                        <th>Type</th>
                        <th>Optional</th>
                        <th>Description</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>id</td>
                        <td>URL parameter</td>
                        <td>Yes</td>
                        <td>The ID of a value, used to retrieve a specific object</td>
                    </tr>
                    <tr>
                        <td>name</td>
                        <td>Query parameter</td>
                        <td>Yes</td>
                        <td>A search word to get all values that match this key:value</td>
                    </tr>
                    <tr>
                        <td>description</td>
                        <td>Query parameter</td>
                        <td>Yes</td>
                        <td>
                            Country description
                        </td>
                    </tr>
                    <tr>
                        <td>population</td>
                        <td>Query parameter</td>
                        <td>Yes</td>
                        <td>
                            Population value
                        </td>
                    </tr>
                    <tr>
                        <td>gdp</td>
                        <td>Query parameter</td>
                        <td>Yes</td>
                        <td>
                            gdp value
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="overflow-hidden content-section" id="content-get-states">
            <h2>Get states</h2>
            <pre>
                <code class="bash">
# Here is a simple node.js fetch get example (no need to add headers)
fetch("http://localhost:3000/estados", {
    "method": "GET"
});
                </code>
            </pre>
            <p>
                To get States you need to make a GET call to the following url:<br>
                <code class="higlighted break-word">https://dynamic-searchable-generic-api.herokuapp.com/estados/:id?</code><br><br>
                Note: the :id field is optional, and with or without it you can still use URL queries to the server, for example, in the next URL we will get all results that match the id 4 with name "randomName" and stateId "6":
                <code class="higlighted break-word">https://dynamic-searchable-generic-api.herokuapp.com/estados/4?name=randomName&stateId=6</code>
            </p>
            <br>
            <pre><code class="json">
Result example :

[
    {
        "id": 6,
        "name": "Random state name 6",
        "currency": "BRL",
        "minimumWage": "1500",
        "paisId": 2
    },
    {
        "id": 7,
        "name": "Random state name 7",
        "currency": "BRL",
        "minimumWage": "1500",
        "paisId": 2
    }
]
                </code></pre>
            <h4>QUERY PARAMETERS</h4>
            <table class="central-overflow-x">
                <thead>
                <tr>
                    <th>Field</th>
                    <th>Type</th>
                    <th>Optional</th>
                    <th>Description</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>id</td>
                    <td>URL parameter</td>
                    <td>Yes</td>
                    <td>The ID of a value, used to retrieve a specific object</td>
                </tr>
                <tr>
                    <td>name</td>
                    <td>Query parameter</td>
                    <td>Yes</td>
                    <td>A search word to find state by name</td>
                </tr>
                <tr>
                    <td>currency</td>
                    <td>Query parameter</td>
                    <td>Yes</td>
                    <td>
                        What currency is being used
                    </td>
                </tr>
                <tr>
                    <td>minimumWage</td>
                    <td>Query parameter</td>
                    <td>Yes</td>
                    <td>
                        Minimum wage value
                    </td>
                </tr>
                <tr>
                    <td>paisId</td>
                    <td>Query parameter</td>
                    <td>Yes</td>
                    <td>
                        Specific id to get all values that match this value
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
        <div class="overflow-hidden content-section" id="content-get-cities">
            <h2>Get Cities</h2>
            <pre>
                <code class="bash">
# Here is a simple node.js fetch get example (no need to add headers)
fetch("http://localhost:3000/cidades", {
    "method": "GET"
});
                </code>
            </pre>
            <p>
                To get Cities you need to make a GET call to the following url:<br>
                <code class="higlighted break-word">https://dynamic-searchable-generic-api.herokuapp.com/cidades/:id?</code><br><br>
                Note: the :id field is optional, and with or without it you can still use URL queries to the server, for example, in the next URL we will get all results that match the id 4 with name "randomName" and stateId "6":
                <code class="higlighted break-word">https://dynamic-searchable-generic-api.herokuapp.com/cidades/4?name=randomName&stateId=6</code>
            </p>
            <br>
            <pre><code class="json">
Result example :

[
    {
        "id": 1,
        "name": "Random city name 1",
        "population": 45394,
        "generalAge": 30,
        "stateId": 1
    },
    {
        "id": 2,
        "name": "Random city name 2",
        "population": 24083,
        "generalAge": 33,
        "stateId": 1
    }
]
                </code></pre>
            <h4>QUERY PARAMETERS</h4>
            <table class="central-overflow-x">
                <thead>
                <tr>
                    <th>Field</th>
                    <th>Type</th>
                    <th>Optional</th>
                    <th>Description</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>id</td>
                    <td>URL parameter</td>
                    <td>Yes</td>
                    <td>The ID of a value, used to retrieve a specific object</td>
                </tr>
                <tr>
                    <td>name</td>
                    <td>Query parameter</td>
                    <td>Yes</td>
                    <td>A search word to find city by name.</td>
                </tr>
                <tr>
                    <td>population</td>
                    <td>Query parameter</td>
                    <td>Yes</td>
                    <td>A search word to find city by name.</td>
                </tr>
                <tr>
                    <td>generalAge</td>
                    <td>Query parameter</td>
                    <td>Yes</td>
                    <td>A search word to find city by name.</td>
                </tr>
                <tr>
                    <td>stateId</td>
                    <td>Query parameter</td>
                    <td>Yes</td>
                    <td>A specific state id to get all values that match this key:value.</td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="content-code"></div>
</div>
<!-- Github Corner Ribbon - to remove (Ribbon created with : http://tholman.com/github-corners/ )-->
<!-- <a href="https://github.com/ticlekiwi/API-Documentation-HTML-Template" class="github-corner" aria-label="View source on Github" title="View source on Github"><svg width="80" height="80" viewBox="0 0 250 250" style="z-index:99999; fill:#70B7FD; color:#fff; position: fixed; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}@media only screen and (max-width:680px){ .github-corner > svg { right: auto!important; left: 0!important; transform: rotate(270deg)!important;}}</style> -->
<a href="https://github.com/nekitbr/dynamic-searchable-generic-api" class="github-corner" aria-label="View source on Github" title="View source on Github"><svg width="80" height="80" viewBox="0 0 250 250" style="z-index:99999; fill:#70B7FD; color:#fff; position: fixed; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}@media only screen and (max-width:680px){ .github-corner > svg { right: auto!important; left: 0!important; transform: rotate(270deg)!important;}}</style>
<!-- END Github Corner Ribbon - to remove -->
<script src="../public/script.js"></script>
</body>
</html>